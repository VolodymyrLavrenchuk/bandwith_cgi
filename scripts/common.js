function addEvent(elm, evType, fn, useCapture) {        if (elm.addEventListener) {                elm.addEventListener(evType, fn, useCapture);        return true;        }        else if (elm.attachEvent) {                var r = elm.attachEvent('on' + evType, fn);                return r;        }        else {                elm['on' + evType] = fn;        }}function addLoadEvent(func) {        var oldonload = window.onload;        if (typeof window.onload != 'function') {                window.onload = func;        }        else {                window.onload = function() {                        oldonload();                        func();                }        }}function getQueryVariable(variable) {    var query = window.location.search.substring(1);    var vars = query.split('&');    for (var i = 0; i < vars.length; i++) {        var pair = vars[i].split('=');        if (decodeURIComponent(pair[0]) == variable) {            return decodeURIComponent(pair[1]);        }    }    console.log('Query variable %s not found', variable);}